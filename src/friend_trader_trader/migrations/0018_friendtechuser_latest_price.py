# Generated by Django 4.2.4 on 2023-09-23 20:37
import logging
from django.db import migrations, models
import django.db.models.deletion

logger = logging.getLogger('django')

def forward_func(apps, schema_editor):
    batch_size = 1000
    curr_batch_size = 0
    batch_num = 1
    FriendTechUser = apps.get_model("friend_trader_trader", "FriendTechUser")
    users_to_update = []
    logger.info("making query")
    
    queryset = (FriendTechUser.objects
               .prefetch_related("share_prices", "share_prices__prices")
               .all()
               .iterator(chunk_size=batch_size))
    
    for friend_tech_user in queryset:
        if latest_trade := friend_tech_user.share_prices.order_by("block__block_timestamp").last():
            latest_price = latest_trade.prices.last()
            friend_tech_user.latest_price = latest_price
            users_to_update.append(friend_tech_user)
            curr_batch_size += 1
        if len(users_to_update) == batch_size:
            logger.info(f"batch {batch_num} updating")
            FriendTechUser.objects.bulk_update(users_to_update, ["latest_price"])
            users_to_update = []
            batch_num += 1
    if users_to_update:
        logger.info(f"final update {len(users_to_update)}")
        FriendTechUser.objects.bulk_update(users_to_update, ["latest_price"])
            
    
def backward_func(apps, schema_editor):
    FriendTechUser = apps.get_model("friend_trader_trader", "FriendTechUser")
    FriendTechUser.objects.all().update(latest_price=None)

class Migration(migrations.Migration):

    dependencies = [
        ('friend_trader_trader', '0017_friendtechuser_holder_count_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='friendtechuser',
            name='latest_price',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='latest_price', to='friend_trader_trader.price'),
        ),
        migrations.RunPython(forward_func, backward_func),
    ]
